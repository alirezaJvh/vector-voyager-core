name: Publish Docker image

on:
  push:
    branches:
      - main

jobs:
  build_and_push:
    name: Push Docker image registries
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}/app
          tags: |
            latest
            ${{ github.sha }}
          labels: |
            app

      - name: Build and push Docker images
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./build/staging/Dockerfile
          push: true
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  
  deploy_to_server:
    name: Deploy to server
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Deploy to server
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_KEY }}
          REMOTE_HOST: ${{ vars.SERVER_IP }}
          REMOTE_USER: spoki
          SCRIPT_AFTER_REQUIRED: true
          SOURCE: "build docker-compose.yml"
          SCRIPT_AFTER: |
            export GITHUB_SHA=${{ github.sha }}
            ./build/deploy_blue_green.sh
